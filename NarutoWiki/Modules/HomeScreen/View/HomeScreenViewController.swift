//
//  HomeScreenViewController.swift
//  NarutoWiki
//
//  Created by Brenner on 27/12/21.
//
//  This file was generated by the ðŸ–¤ Popcode's MVVM generator.
//

import UIKit

final class HomeScreenViewController: UIViewController {
    
    // MARK: - Class properties
    private var viewModel: HomeScreenViewModelProtocol
    private lazy var viewInstance = HomeScreenView()
    
    private enum Constants {
        static let cellHeight: CGFloat = 100.0
    }

    // MARK: - Public properties

    
    // MARK: - Life Cycle
    
    init(viewModel: HomeScreenViewModelProtocol) {
        self.viewModel = viewModel
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        setupTableView()
        bindUI()
        viewModel.viewDidLoad()
    }
    // MARK: - Class Configurations
    
    // MARK: - UIActions
    
    // MARK: - Class Methods
    private func setupUI() {
        view.backgroundColor = .white
        view.addSubview(viewInstance)
        NSLayoutConstraint.activate([
            viewInstance.topAnchor.constraint(equalTo: view.topAnchor),
            viewInstance.bottomAnchor.constraint(equalTo: view.bottomAnchor),
            viewInstance.trailingAnchor.constraint(equalTo: view.trailingAnchor),
            viewInstance.leadingAnchor.constraint(equalTo: view.leadingAnchor)
        ])
    }
    
    private func bindUI() {
        viewModel.reloadTableView = { [self] in
            DispatchQueue.main.async {
                viewInstance.tableView.reloadData()
            }
        }
    }
    
    private func setupTableView() {
        viewInstance.tableView.register(CharacterTableViewCell.self, forCellReuseIdentifier: CharacterTableViewCell.reuseIdentifier)
        viewInstance.tableView.delegate = self
        viewInstance.tableView.dataSource = self
    }
    
    private func setupCell(_ indexPath: IndexPath) -> UITableViewCell {
        guard let cell = viewInstance.tableView.dequeueReusableCell(withIdentifier: CharacterTableViewCell.reuseIdentifier) as? CharacterTableViewCell,
              let character = viewModel.characters?[indexPath.row] else { return UITableViewCell() }
        cell.setupCell(character: character)
        return cell
    }
}

extension HomeScreenViewController: HomeScreenViewDelegate {}

extension HomeScreenViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        viewModel.characters?.count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        setupCell(indexPath)
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        Constants.cellHeight
    }
}
